installation process

1 - npm init -y
2 - npm i cypress --save-dev
3 - npx cypress open



# adding scripts to the package.json

{
  "scripts": {
    "cy:open": "cypress open"
  }
}



#load testing 

for (let i = 0; i < 100; i++) {
  cy.request('POST', 'https://api.example.com/endpoint', {
    key1: 'value1',
    key2: 'value2'
  }).then((response) => {
    expect(response.status).to.eq(201);
  });
}


#post method

cy.request('POST', 'https://api.example.com/endpoint', {
  key1: 'value1',
  key2: 'value2'
}).then((response) => {
  expect(response.status).to.eq(201);
  expect(response.body).to.have.property('key', 'value');
});


#get method 

cy.request('GET', 'https://api.example.com/endpoint')
  .its('status')
  .should('equal', 200);  // Verifies the response status is 200 OK


#checking url with cypress

cy.url().should('eq', 'https://dev.quipohealth.com/patient/verify-email');


#check box true or false

cy.get('.remember-me > input').then(($checkbox) => {
            if (!$checkbox.is(':checked')) {
              cy.get('.remember-me > input').check();
            }
          });


#Element present or not 

cy.get('body').then($body => {
            if ($body.find('.btn-default').length > 0) {
              cy.get('.btn-default').click();
            }
          });


#run cypress in termil specific file 

npx cypress run --spec cypress/e2e/filename.cy.js

#run cypress in termil with choosen browser

npx cypress run --browser firefox



XPath

npm i -D cypress-xpath
add entry in command.js  /// <reference types="cypress-xpath" />
add entry in support/e2e.js  reuire('cypress-xpath')

describe('XPath Locators', () => {

    it('launch test application', () => {

        cy.visit('https://aiscribe.quipohealth.com/')
        cy.xpath("//div[@class='actionContainerSub']//button").should('have.length', 4)
    })
    it('launch image test application', () => {

        cy.visit('https://aiscribe.quipohealth.com/')
        cy.xpath("//div[@class='mainContainer collapsed']//img").should('have.length', 12)
    })
})



